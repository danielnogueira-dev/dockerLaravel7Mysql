version: "3.8"
services:
  web:
    container_name: ${WEB_CONTAINER_NAME}
    build:
      context: ${WEB_HOST_BUILDER_PATH}
      dockerfile: ${DOCKERFILE}
    ports:
      - "${WEB_HOST_HTTP_PORT}:${WEB_CONTAINER_HTTP_PORT}"
    volumes:
      - ${APPLICATION_HOST_PATH}:${APPLICATION_CONTAINER_PATH}
      - ${APACHE_HOST_LOG}:${APACHE_CONTAINER_LOG}
      - ${APACHE_HOST_SITES_AVAILABLE}:${APACHE_CONTAINER_SITES_AVAILABLE}
      - ${PHP_HOST_CONF}:${PHP_CONTAINER_CONF}
  composer:
    container_name: ${COMPOSER_CONTAINER_NAME}
    build:
      context: ${COMPOSER_HOST_BUILDER_PATH}
      dockerfile: ${DOCKERFILE}
    command: ["composer", "install"]
    restart: always
    volumes:
      - ${APPLICATION_HOST_PATH_NAME}:${COMPOSER_CONTAINER_APP_PATH}
  mysql:
    container_name: ${MYSQL_CONTAINER_NAME}
    build:
      context: ${MYSQL_HOST_BUILDER_PATH}
      dockerfile: ${DOCKERFILE}
    restart: always
    ports:
      - "${MYSQL_HOST_HTTP_PORT}:${MYSQL_CONTAINER_HTTP_PORT}"
    volumes:
      - ${MYSQL_HOST_DATA}:${MYSQL_CONTAINER_DATA}
    environment:
      - MYSQL_DATABASE=${MYSQL_ENV_DATABASE}
      - MYSQL_USER=${MYSQL_ENV_USER}
      - MYSQL_PASSWORD=${MYSQL_ENV_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ENV_ROOT_PASSWORD}
  mongo:
    container_name: ${MONGO_CONTAINER_NAME}
    build:
      context: ${MONGO_HOST_BUILDER_PATH}
      dockerfile: ${DOCKERFILE}
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}    
  mongo-express:
    container_name: ${MONGO_EXPRESS_CONTAINER_NAME}
    build:
      context: ${MONGO_EXPRESS_HOST_BUILDER_PATH}
      dockerfile: ${DOCKERFILE}
    restart: always
    ports:
      - ${MONGO_EXPRESS_HOST_HTTP_PORT}:${MONGO_EXPRESS_CONTAINER_HTTP_PORT}
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_EXPRESS_CONFIG_MONGODB_ADMINUSERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_EXPRESS_CONFIG_MONGODB_ADMINPASSWORD}
  rabbitmq:
    container_name: ${RABBITMQ_CONTAINER_NAME}
    build:
      context: ${RABBITMQ_HOST_BUILDER_PATH}
      dockerfile: ${DOCKERFILE}
    restart: always
    ports:
      - ${RABBITMQ_HOST_HTTP_PORT}:${RABBITMQ_CONTAINER_HTTP_PORT}
      - ${RABBITMQ_MANAGEMENT_HOST_HTTP_PORT}:${RABBITMQ_MANAGEMENT_CONTAINER_HTTP_PORT}
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    volumes:
      - ${RABBITMQ_HOST_ETC}:${RABBITMQ_CONTAINER_ETC}
      - ${RABBITMQ_HOST_LOG}:${RABBITMQ_CONTAINER_LOG}
networks:
  backend:
